---
- name: Convert batch script to Ansible
  hosts: windows
  gather_facts: no
  tasks:

    - name: Create the FHC directory
      win_file:
        path: 'C:\users\administrator\Downloads\FHC'
        state: directory

    - name: Copy ZIP files from remote to local directory
      win_shell: |
        Copy-Item -Path '\\10.230.136.14\Public\Rene\tests\fhc\AFHC_Windows_2.2.9.1.zip' -Destination 'C:\users\administrator\Downloads'

    - name: Copy windows_export-logs.bat files from remote to local directory
      win_shell: |
        Copy-Item -Path '\\10.230.136.14\Public\Rene\tests\fhc\windows_export-logs.bat' -Destination 'C:\users\administrator\Downloads\FHC'

    - name: Copy log-checkandclear.bat to FHC directory
      win_shell: |
        Copy-Item -Path '\\10.230.136.14\Public\Rene\Scripts\Personal\log-checkandclear.bat' -Destination 'C:\users\administrator\Downloads\FHC' -Force

    - name: Expand each ZIP archive into the FHC directory
      win_shell: |
        Get-ChildItem -Path 'C:\users\administrator\Downloads\*.zip' | ForEach-Object {
          Expand-Archive -Path $_.FullName -DestinationPath "C:\users\administrator\Downloads\FHC\$(($_.Name -replace '.zip',''))"
          Write-Host "Extracted: $($_.FullName)"
        }

    #- name: Execute Windows_Export-Logs.bat
    #  win_shell: |
    #    C:\users\administrator\Downloads\FHC\Windows_Export-Logs.bat

    #- name: Execute log-checkandclear.bat with "check"
    #  win_shell: |
    #    C:\users\administrator\Downloads\FHC\log-checkandclear.bat check

    #- name: Execute log-checkandclear.bat with "clear"
    #  win_shell: |
    #    C:\users\administrator\Downloads\FHC\log-checkandclear.bat clear

    - name: List power schemes
      win_command: powercfg /list

    - name: Set power scheme to SCHEME_MIN
      win_command: powercfg /setactive SCHEME_MIN

    - name: List power schemes again
      win_command: powercfg /list

    - name: Verify if FHC directory exists
      win_stat:
        path: 'C:\users\administrator\Downloads\FHC\AFHC_Windows_2.2.9.1\AFHC_Windows_2.2.9.1'
      register: fhc_dir

    - name: Fail if FHC directory does not exist
      fail:
        msg: 'Directory C:\users\administrator\Downloads\FHC does not exist'
      when: not fhc_dir.stat.exists

    - name: Search for FHC.exe and run if found
      win_find:
        paths: 'C:\users\administrator\Downloads\FHC'
        patterns: 'FHC.exe'
        recurse: yes
      register: fhc_search
        
    - name: Search for FHC.exe and run if found
      win_find:
        paths: 'C:\users\administrator\Downloads\FHC'
        patterns: 'FHC.exe'
        recurse: yes
      register: fhc_search
        
    - name: Run FHC.exe if found
     #win_command: 'C:\users\administrator\Downloads\FHC\AFHC_Windows_2.2.9.1\AFHC_Windows_2.2.9.1\FHC.exe -r 1440'
      #win_shell: |
        #psexec -i -accepteula "C:\users\administrator\Downloads\FHC\AFHC_Windows_2.2.9.1\AFHC_Windows_2.2.9.1\FHC.exe" -r 1440
        #C:\users\administrator\Downloads\psexec.exe -i "C:\users\administrator\Downloads\FHC\AFHC_Windows_2.2.9.1\AFHC_Windows_2.2.9.1\FHC.exe" -r 1440
      win_command: Start-Process -FilePath "C:\users\administrator\Downloads\FHC\AFHC_Windows_2.2.9.1\AFHC_Windows_2.2.9.1\FHC.exe" ArgumentList "-r 1440"
